---
title: "Assignment 02 Data Exploration"
subtitle: "BQOM 2578 | Data Mining"
date: "September 17, 2025" 
author: "Theresa Wohlever"
editor: visual
format:
  pdf:
    toc: true
    toc-depth: 2
    number-sections: false
    mainfont: "Georgia"
    sansfont: "Avenir"
    monofont: "Menlo"
    mathfont: "STIX Two Math"
    pdf-engine: xelatex
    
abstract-title: "Assignment 02: Data Exploration"
---

# Executive Summary

This dataset is from [Medicaid Drug AMP Reporting](https://data.medicaid.gov/dataset/80956a7d-e343-54f3-94a7-45d41b34fc0b#data-table) 

The Data Cleaning and Preparation includes creating a Date column generated from the corresponding year and Quarter columns and categorizing drug types. 

Of the drugs that can be categorized, the most commonly occurring are those addressing hypertension and cardiac disease. This category is heavily invested in by labeler companies, including 28 of the top 30 companies.


```{r}
#| label: LoadPackages
#| echo: false
#| message: false


library(ggplot2)
library(dplyr)
library(stringr)
library(tidyr)
library(lubridate)

```

```{r}
#| label: SetWd
#| echo: false
#| message: false
#| results: 'hide'

setwd("/Users/theresawohlever/git_repos/BQOM-2578_DataMining/BQOM-2578_DataMining_twohlever/assignments/02-DataExploration")
getwd() 
```

```{r}
#| label: Cleanup
#| echo: false
#| message: false

rm(list = ls())
```

# Drug AMP Reporting - Quarterly

The dataset is from [Medicaid Drug AMP Reporting](https://data.medicaid.gov/dataset/80956a7d-e343-54f3-94a7-45d41b34fc0b#data-table) and described there:

> *Drugs that have been reported under the Medicaid Drug Rebate Program along with an indication of whether or not the required Average Manufacturer Price (AMP) was reported for each drug. All drugs are identified in the file by the 11-digit National Drug Code, product name, labeler name, and reported (R) or not reported (NR).*

Raw data from Medicaid Drug AMP Reporting: <https://data.medicaid.gov/dataset/80956a7d-e343-54f3-94a7-45d41b34fc0b#data-table>

```{r}
#| label: Import
#| echo: true
#| message: true

base_FILENAME <- "DrugAMPReportingQuarterly022025" ## tiny

csv_FILE <- paste(base_FILENAME, ".csv", sep = "")
csv_OUT_FILE <- paste(base_FILENAME, "_processed.csv", sep = "") 

raw_amp_df <- read.csv(csv_FILE, stringsAsFactors = FALSE) 

```

# Data Discovery

Review Head, Tail, Dimensions, Column Headers, and Summary Statistics
```{r}
#| label: DiscoveryRaw
#| echo: false
#| message: false

# head displays the first rows 
head(raw_amp_df) 

# tail displays the last rows 
tail(raw_amp_df) 
```

```{r}
#| label: DiscoverySummary
#| echo: false
#| message: false

# dim tells you how many rows by how many columns you have
dim(raw_amp_df) 

# names returns the names of the columns that you have 
names(raw_amp_df) 

#summary will give you relevant summary statistics for each variable depending on its type  
summary(raw_amp_df)
```

# Data Cleaning
Random subset to improve analysis execution speed 
Cleans up labeler company names by removing excessive spacing
Cleans up Status
```{r}
#| label: CleanUp
#| echo: true
#| message: false

df <-raw_amp_df # sample_n(raw_amp_df, 10000)
names(df)[names(df) == "FDA.Product.Name"] <- "Product"


## Clean Up Status
df <- df %>% mutate(Status = case_when(
    grepl("^R\\s*$", Status) ~ "R",
    grepl("NR", Status) ~ "NR",
    TRUE ~ NA
  ))


# Clean up labeler names (remove excessive spacing and formatting)
df$Labeler_Clean <- str_trim(str_replace_all(df$Labeler.Name, "\\s+", " "))


```

# Data Preparation
## Date Column Creation 
-   Combines Year and Quarter columns into a proper Date column for better temporal analysis
-   Converts quarters to actual dates (Q1 = January 1st, Q4 = October 1st)

```{r}
#| label: DateColumn
#| echo: true
#| message: true

# Create a meaningful Date column by combining Year and Quarter
# Convert quarter to actual dates for better temporal analysis
df$Date <- as.Date(paste(df$Year, (df$Quarter - 1) * 3 + 1, "01", sep = "-"))

```

## Drug Category Classification
-   Creates meaningful drug categories by analyzing FDA Product Names

```{r}
#| label: DrugCategory
#| echo: true
#| message: true



## Update with Dose
df <- df %>%
  mutate(dose = str_extract(Product, "\\d+(?=\\s*MG)"))


## Prep for Categories
products <- df$Product
escaped_products <- gsub("([][{}()+*^$.|?\\])", "\\\\\\1", toupper(products))
product_regex <- paste(escaped_products, collapse = "|")
has_products <- nzchar(product_regex) # TRUE if pattern not empty

if (product_regex != "") {
  df <- df %>%
   mutate(
      ProductUpper = toupper(Product),
      Drug_Category = case_when(
        # All products in the text file
        has_products &
  
        # Opioid/Combination Analgesic
        str_detect(ProductUpper, "OXYCOD|HYDROCOD|MORPHIN|TRAMADOL|CODEINE|METHADONE|BUPRENORPHINE|FENTANYL|HYDROMORPHONE|PERCOCET|OXYCONTIN|NORCO|SUBOXONE|DURAMORPH|DEMEROL|DILAUDID|OPANA|ARYMO|ZOHYDRO|ROXICODONE|BELBUCA|BUNAVAIL|DOLOGESIC|METHADOSE") ~ "Opioid/Combination Analgesic",
  
        # NSAIDs/Non-opioid Analgesic/Antipyretic
        str_detect(ProductUpper, "IBUPROFEN|NAPROXEN|ACETAMINOPHEN|APAP|ASPIRIN|DICLOFENAC|KETOPROFEN|ETODOLAC|INDOMETHACIN|SALSALATE|OXAPROZIN|PIROXICAM|KETOROLAC|CELECOXIB|MELOXICAM|MEFENAMIC|FENOPROFEN|EXCEDRIN|GOODY|TYLENOL|PAIN RELIEF|CAPSAICIN|THERA-GESIC|MINERAL ICE|HEADACHE POWDER|ADVIL") ~ "NSAIDs/Pain/Antipyretic",
  
        # Antidiabetic
        str_detect(ProductUpper, "METFORMIN|GLIMEPIRIDE|GLIPIZIDE|GLYBURIDE|JANUMET|GLUCOVANCE|INVOKANA|JARDIANCE|TRESIBA|BASAGLAR|OZEMPIC|STEGLUJAN|SYNJARDY|TRULICITY|PIOLIGLITAZONE|JENTADUETO|BYDUREON|GLUCOPHAGE|ACTOS|AFREZZA|INSULIN|LANTUS|LEVEMIR") ~ "Antidiabetic",
  
        # Statins/Cholesterol
        str_detect(ProductUpper, "ATORVASTATIN|SIMVASTATIN|LOVASTATIN|PRAVASTATIN|FLUVASTATIN|ROSUVASTATIN|LIPITOR|EZETIMIBE|NIASPAN|FENOFIBRATE|FENOFIBRIC ACID|TRICOR|CRESTOR|VYTORIN|GEMFIBROZIL|FIBRICOR|LIPOPHEN|LOPID|OMEGA 3|EPA") ~ "Lipid Modifier",
  
        # Antihypertensive/Cardiac
        str_detect(ProductUpper, "LISINOPRIL|ENALAPRIL|LOSARTAN|VALSARTAN|QUINAPRIL|TELMISARTAN|OLMESARTAN|RAMIPRIL|BENAZEPRIL|CANDESARTAN|HCTZ|SPIRONOLACTONE|EPLE|TRIAMTERENE|BISOPROLOL|CARVEDILOL|LABETALOL|DILTIAZEM|FELDOPINE|VERAPAMIL|NIFEDIPINE|ISOSORBIDE|NITROGLYCERIN|RANOLAZINE|AMLODIPINE|PROPRANOLOL|BETAXOLOL|TAMSULOSIN|DOXAZOSIN|ALDACTAZIDE|POTASSIUM CHL|ATENOLOL|SOTALOL|METOPROLOL|CHLORTHALIDONE|HYDRALAZINE|CLONIDINE|GUANFACINE|METHYLDOPA|AMIODARONE|DIGOXIN|MILRINONE|SUCCINYLCHOLINE|MIDODRINE|MINOXIDIL|NEBIVOLOL|NADOLOL|PROROL|TERAZOSIN|DILTIAZ|VERELAN|INDAPAMIDE|BETAPACE|TRANDOLAPRIL|BYSTOLIC|MOEXIPRIL|FOSINOPRIL|CAPTOPRIL|ALISKIREN|MINIPRESS|PRAZOSIN") ~ "Antihypertensive/Cardiac",
  
        # Diuretic/Electrolyte/Laxative/IV Fluid
        str_detect(ProductUpper, "FUROSEMIDE|BUMETANIDE|HYDROCHLOROTHIAZIDE|HCTZ|CHLORTHALIDONE|METOLAZONE|TORSEMIDE|LACTULOSE|POLYETHYLENE GLYCOL|PEG|DOCUSATE|MINERAL OIL|BISACODYL|SENNA|CTL/MG|POTASSIUM|SODIUM|PHOSPHATE|BICARBONATE|MANITOL|MAGNESIUM|ELECTROLYTE|RENVELA|VIAFLEX|INFUVITE|PHOSPHA|CALCIUM ACETATE|PHOSPHATES|PLASMA-LYTE|PLASBUMIN") ~ "Diuretic/Electrolyte/Laxative/IV",
  
        # Psychotropic/Antidepressant/Neuro
        str_detect(ProductUpper, "SERTRALINE|FLUOXETINE|ESCITALOPRAM|CITALOPRAM|PAROXETINE|BUPROPION|VENLAFAXINE|DULOXETINE|AMITRIPTYLINE|NORTRIPTYLINE|IMIPRAMINE|DOXEPIN|MIRTAZAPINE|TRAZODONE|VORTIOXETINE|VILAZODONE|BUSPIRONE|DIAZEPAM|ALPRAZOLAM|LORAZEPAM|CLONAZEPAM|TEMAZEPAM|OXAZEPAM|ZOLPIDEM|ESZOPICLONE|ZOPICLONE|RAMELTEON|SUVOXAMELT|TRIAZOLAM|MELATONIN|DOTHIEPIN") ~ "Psychotropic/Antidepressant/Neuro",
  
        # Antipsychotic/Neuroleptic
        str_detect(ProductUpper, "QUETIAPINE|SEROQUEL|OLANZAPINE|ZYPREXA|RISPERIDONE|RISPERDAL|PALIPERIDONE|ARIPIPRAZOLE|ABILIFY|LURASIDONE|LATUDA|HALOPERIDOL|HALDOL|CHLORPROMAZINE|THIORIDAZINE|TRIFLUOPERAZINE|PERPHENAZINE|THIOTHIXENE|FLUPHENAZINE|CLOZAPINE|ASENAPINE|FANAPT|CARIPRAZINE|VRAYLAR|PIMOZIDE|MOLINDONE|ZELDOX|LOXAPINE") ~ "Antipsychotic/Neuroleptic",
  
        # Anticonvulsant/Epilepsy/Neurologic
        str_detect(ProductUpper, "LEVETIRACETAM|LAMOTRIGINE|TOPIRAMATE|DIVALPROEX|VALPROIC|GABAPENTIN|CARBAMAZEPINE|PREGABALIN|PHENYTOIN|PHENOBARBITAL|ZONISAMIDE|OXCARBAZEPINE|PRIMIDONE|BRIVARACETAM|LACOSAMIDE|TIAGABINE|ETHOSUXIMIDE|FELBAMATE|CLONAZEPAM|PERAMPANEL|VIGABATRIN|CENOBAMATE|LACOSAMIDE|GABRITRIL|FYCOMPA") ~ "Anticonvulsant/Neurologic",
  
        # Antimicrobial/Antiinfective/Oncology/Immune
        str_detect(ProductUpper, "AMOXICILLIN|CLAVULANATE|PENICILLIN|OXACILLIN|NAFCILLIN|AMPICILLIN|CEFAZOLIN|CEPHALEXIN|CEFTRIAXONE|CEFTAZIDIME|CEFTAROLINE|CEFEPIME|CEFUROXIME|CEFOTAXIME|CIPROFLOXACIN|LEVOFLOXACIN|MOXIFLOXACIN|OFLOXACIN|MINOCYCLINE|DOXYCYCLINE|ERYTHROMYCIN|AZITHROMYCIN|CLARITHROMYCIN|GENTAMICIN|TOBRAMYCIN|AMIKACIN|LINEZOLID|DAPTOMYCIN|VANCOMYCIN|RIFAMPIN|METRONIDAZOLE|TINIDAZOLE|CLINDAMYCIN|TRIMETHOPRIM|SULFAMETHOXAZOLE|TMP|NITROFURANTOIN|FOSFOMYCIN|MUPIROCIN|CLEOCIN|POLYMYXIN|COLISTIMETHATE|IMIPENEM|MEROPENEM|DORIPENEM|ERTAPENEM|AZTREONAM|CLOTRIMAZOLE|KETOCONAZOLE|FLUCONAZOLE|ITRACONAZOLE|POSACONAZOLE|VORICONAZOLE|CASPOFUNGIN|MICAFUNGIN|ANIDULAFUNGIN|NYSTATIN|AMPHOTERICIN|TERBINAFINE|GRISEOFULVIN|ACYCLOVIR|VALACYCLOVIR|FAMCICLOVIR|OSLTAMIVIR|BALOXAVIR|SOFOSBUVIR|LEDIPASVIR|RITONAVIR|LOPINAVIR|DARUNAVIR|ATAZANAVIR|INDINAVIR|SAQUINAVIR|DOLUTEGRAVIR|RALTEGRAVIR|ELVITEGRAVIR|BICTEGRAVIR|EMTRICITABINE|LAMIVUDINE|ABACAVIR|EFAVIRENZ|NEVIRAPINE|TENOFOVIR|ENTECAVIR|TELBIVUDINE|BOCEPREVIR|TELEPREVIR|GANCICLOVIR|VALGANCICLOVIR|CIDOFOVIR|FOSCARNET|LETROZOLE|TAMOXIFEN|FULVESTRANT|IMATINIB|ERLOTINIB|SORAFENIB|SUNITINIB|AFINITOR|EVEROLIMUS|NILUTAMIDE|POMALIDOMIDE|PEGINTERFERON|PLERIXAFOR|GEMCITABINE|CARBOPLATIN|DOXORUBICIN|CYCLOPHOSPHAMIDE|IFOSFAMIDE|BLEOMYCIN|MITOMYCIN|VINCRISTINE|VINBLASTINE|VINORELBINE|DAUNORUBICIN|CYTARABINE|TRETINOIN|THIOGUANINE|DOXEPIN|NIRAPARIB|INOTUZUMAB|BRENTUXIMAB|BLINATUMOMAB|IDELALISIB|OBINUTUZUMAB|RITUXIMAB|TRASTUZUMAB|PENICILLAMINE|AZATHIOPRINE|MYCOPHENOLATE|LEFLUNOMIDE|METHOTREXATE|FORTEO|DENOSUMAB|CINACALCET|CALCITRIOL|PTH|INSULIN DEGLUDEC") ~ "Antimicrobial/Oncology/Immune",
  
        # Respiratory/ENT/Antihistamine
        str_detect(ProductUpper, "ALBUTEROL|IPRATROPIUM|LEVOSALBUTAMOL|FORMOTEROL|BUDESONIDE|MONTELUKAST|SALMETEROL|FLUTICASONE|CROMOLYN|OLAPATADINE|AZELASTINE|ANTIHISTAMINE|LORATADINE|CETIRIZINE|FEXOFENADINE|DIPHENHYDRAMINE|PROMETHAZINE|PHENYLEPHRINE|PSEUDOEPHEDRINE|OXMETAZOLINE|RECTAL DECONGESTANT|COUGH|GUAIFENESIN|MUCINEX|DELSYM|RESPIRATORY|DM|EXPECTORANT|ANTITUSSIVE|CALDENSE|TUSSIN|NASAL|INHALE|INHALER|INH|INHALATION|NEBULIZER|DMX|NEBIVOLOL") ~ "Respiratory/ENT/Antihistamine",
  
        # Hormonal/Endocrine
        str_detect(ProductUpper, "LEVOTHYROXINE|LIOTHYRONINE|THYROID|ESTRADIOL|PROGESTERONE|MEDROXYPROGESTERONE|FINASTERIDE|FLUDROCORTISONE|HYDROCORTISONE|DEXAMETHASONE|METHYLPREDNISOLONE|PREDNISONE|SPIRONOLACTONE|TESTOSTERONE|VIVELLE|VIVELLE DOT|ACTEMRA|TAMOXIFEN|LETROZOLE|DROSPIRENONE|DRO+ETHIN+LEVO|MENEST|CONTRACEPTIVE|NORETHINDRONE|NORGESTIMATE|DESOGESTREL|LEVONORGESTREL|NEXPLANON|DEPO|PATCH") ~ "Hormonal/Endocrine",
  
        # GI/GERD/Acid/IBD
        str_detect(ProductUpper, "OMEPRAZOLE|PANTOPRAZOLE|LANSOPRAZOLE|ESOMEPRAZOLE|RABEPRAZOLE|FAMOTIDINE|RANITIDINE|CIMETIDINE|SUCRALFATE|PEPCID|BISMUTH|TUMS|ANTACID|CALCIUM CARBONATE|LAXATIVE|SENNA|BISACODYL|DOCUSATE|POLYETHYLENE GLYCOL|PEGLAX|BISMUTH SUBSALICYLATE|PEG|SODIUM BICARBONATE|REGULOID|FIBER|COLYTE|COLESTIPOL|CHOLESTYRAMINE|PREVALITE|COLCHICINE|LOPERAMIDE|IMODIUM|GAS RELIEF|SIMETHICONE|DICYCLOMINE|DIPHENOXYLATE|BILE SALT|STOOL SOFTENER|TAURINE|ASPIR-LOW|PRILOSEC|DUKORAL|BALSALAZIDE|MESALAMINE|SULFASALAZINE|ASACOL|UROSODIOL|URSODIOL|TYLONEX") ~ "GI/IBD/GERD/Acid",
  
        # Anticoagulant/Platelet/Thrombolytic
        str_detect(ProductUpper, "WARFARIN|COUMADIN|HEPARIN|ENOXAPARIN|MRXABAN|APIXABAN|XARELTO|PRADAXA|DABIGATRAN|FONDAPARINUX|LOVENOX|CLOPIDOGREL|PRASUGREL|TICAGRELOR|DIPYRIDAMOLE|PLAVIX|ALTEPLASE|ACTIVASE|THROMBOLYTIC|ARGATROBAN|BIVALIRUDIN|PROTAMINE|TPLASE|TISSEEL|THROMBIN|FACTOR IX|VII|VIII|RETROVIR|PROCRIT|EPOGEN|ERYTHROPOIETIN|RETACRIT") ~ "Anticoagulant/Platelet/Thrombolytic",
  
        # Smoking Cessation
        str_detect(ProductUpper, "NICOTINE|NICORETTE|NICODERM|NICOTROL|GUM|LOZENGE|PATCH|VARENICLINE|CHANTIX") ~ "Smoking Cessation",
  
        # Reproductive/Contraceptive
        str_detect(ProductUpper, "DROSPIRENONE|NORETHINDRONE|NORGESTIMATE|LEVONORGESTREL|ETHINYL ESTRADIOL|DESOGESTREL|ESTROSTEP|ORTHO|LOESTRIN|ORAL CONTRACEPTIVE|PATCH|NEXPLANON|VIVELLE|VIVELLE DOT|MENEST|ESTRACE|ESTROGEN|PROGESTIN|YAZ|YASMIN|MARVELON|MIRENA|PARAGARD|LO LOESTRIN|LUTERA|JULBER") ~ "Contraceptive",
  
        # Vitamins/Nutrition
        str_detect(ProductUpper, "VITAMIN|FOLIC|FOLATE|FOLIVANE|CITRANATAL|FERROUS|CYANOCOBALAMIN|NEONATAL COMPLETE|ERGOCALCIFEROL|AQUASOL|VITAFOL|MULTIVIT|PEDIATRIC|CHILDREN'S|CALCIFEROL|VITAMIN D") ~ "Vitamins/Nutrition",
  
        # Dermatologic/Topical
        str_detect(ProductUpper, "HYDROCORTISONE|CLOBETASOL|BETAMETHASONE|TRIAMCINOLONE|DESONIDE|DESOXIMETASONE|FLUOCINOLONE|ELIDEL|IMIQUIMOD|TRETINOIN|RETIN-A|BENZOYL PEROXIDE|MOISTURIZING|UREA CREAM|TRIAMCINOLONE|BACITRACIN|KETOCONAZOLE|CLOTRIMAZOLE|SILVER SULFADIAZINE|SELENIUM SULFIDE|TERBINAFINE|LINDANE|CICLOPIROX|A&D OINTMENT|CALCIPOTRIENE|CALCITRENE|LUXIQ|MOISTURIZER|DAIVONEX|SUNSCREEN|LIDOFLEX|ANTIFUNGAL|SALICYLIC ACID|POLYSPORIN|TRIPLE ANTIBIOTIC|PRAMOXINE|CORTAID|ANUSOL|ALPHA KERI|ALCLOMETASONE") ~ "Topical/Dermatologic",
  
        # Urologic/Bladder
        str_detect(ProductUpper, "OXYBUTYNIN|TOLTERODINE|SOLIFENACIN|MIRABEGRON|TAMSULOSIN|FINASTERIDE|DUTASTERIDE|PHENAZOPYRIDINE|VESICARE|MYRBETRIQ|FESOTERODINE|DUTASTERIDE|TAMSULOSIN|UROGESIC|FESOTERODINE|TROSPIM|PRAZO") ~ "Urologic/Bladder",
  
        # Miscellaneous/Other
        TRUE ~ "Other"
      )
    ) %>%
    select(-ProductUpper) 

} else{ stop("Product Regex Empty!") }

Others <- df %>% filter(Drug_Category == "Other") %>% distinct(Product) %>% pull(Product)
df_noOther <- df %>% filter(Drug_Category != "Other")

```


```{r}
#| label: StatusCategoriesDistribution
#| echo: true
#| message: true
# Graph 2: Drug Categories by Registration Status
p2 <- ggplot(df_noOther, aes(x = reorder(Drug_Category, Drug_Category, function(x) length(x)), 
                     fill = Status)) +
  geom_bar(position = "dodge", alpha = 0.8) +
  coord_flip() +
  labs(title = "Drug Categories by Registration Status",
       subtitle = "Distribution of product categories and their registration status",
       x = "Drug Category",
       y = "Number of Products",
       fill = "Status",
       caption = "Categories derived from FDA Product Names") +
  scale_fill_manual(values = c("NR" = "#E74C3C", "R" = "#27AE60"),
                    labels = c("NR" = "Non-Registered", "R" = "Registered")) +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
        plot.subtitle = element_text(hjust = 0.5, size = 12),
        axis.text.y = element_text(size = 10))

print(p2)


```

## Category vs. Labeler

```{r}
#| label: CategoryVsLabeler
#| echo: true
#| message: true

# Find top labelers by product count
top_labelers <- df %>%
  count(Labeler_Clean, sort = TRUE) %>%
  slice_head(n = 30) %>%
  pull(Labeler_Clean)

# Filter the main dataframe for these labelers
df_top <- df_noOther %>%
  filter(Labeler_Clean %in% top_labelers)

# 1. Summarize counts
df_top_counts <- df_top %>%
  count(Labeler_Clean, Drug_Category)  

# 2. Plot heatmap
p_heatmap <- ggplot(df_top_counts, aes(x = Drug_Category, y = Labeler_Clean, fill = n)) +
  geom_tile(color = "white") +
  scale_fill_gradient(low = "white", high = "blue") +
  theme_minimal() +
  theme(
    axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),
    axis.text.y = element_text(size = 8) # Decrease labeler font size
  ) +
  labs(
    x = "Category",
    y = "Labeler",
    fill = "Number of Products",
    title = "Heatmap of Labeler vs Number of Products per Category"
  )


print(p_heatmap)

```



## Distribution of Registration Status

```{r}
#| label: StatusDistribution
#| echo: true
#| message: true

p1 <- ggplot(df, aes(x = Status, fill = Status)) +
  geom_bar(stat = "count", alpha = 0.8) +
  geom_text(stat = "count", aes(label = after_stat(count)), vjust = -0.5) +
  labs(title = "Distribution of FDA Registration Status",
       subtitle = "Comparison of Registered (R) vs Non-Registered (NR) Products",
       x = "Registration Status",
       y = "Number of Products",
       caption = "Data Source: FDA Drug Registration Database") +
  scale_fill_manual(values = c("NR" = "#E74C3C", "R" = "#27AE60")) +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
        plot.subtitle = element_text(hjust = 0.5, size = 12),
        legend.position = "none")

print(p1)


```



```{r}
#| label: PharmaCompaniesDistribution
#| echo: true
#| message: true

# Graph 3: Top Pharmaceutical Companies (Top 30)
top_labelers <- names(head(sort(table(df$Labeler_Clean), decreasing = TRUE), 30))
df_top <- df[df$Labeler_Clean %in% top_labelers, ]

p3 <- ggplot(df_top, aes(x = reorder(Labeler_Clean, Labeler_Clean, function(x) length(x)),
                         fill = Status)) +
  geom_bar(stat = "count", alpha = 0.8) +
  coord_flip() +
  labs(title = "Product Count by Top Pharmaceutical Companies",
       subtitle = "Leading companies by number of products in the database",
       x = "Pharmaceutical Company",
       y = "Number of Products",
       fill = "Registration Status",
       caption = "Top Companies by product count") +
  scale_fill_manual(values = c("NR" = "#E74C3C", "R" = "#27AE60"),
                    labels = c("NR" = "Non-Registered", "R" = "Registered")) +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
        plot.subtitle = element_text(hjust = 0.5, size = 12),
        axis.text.y = element_text(size = 9))

print(p3)





```

```{r}
#| label: RegistrationTimelineDistribution
#| echo: true
#| message: true


quarterly_summary_yearly <- df %>%
  group_by(Year, Status) %>%
  summarise(count = n(), .groups = 'drop')

p4 <- ggplot(quarterly_summary_yearly, aes(x = factor(Year), y = count, fill = Status)) +
  geom_col(position = "stack", alpha = 0.8, width = 0.7) +
  geom_text(aes(label = count), position = position_stack(vjust = 0.5), 
            color = "white", size = 4, fontface = "bold") +
  labs(title = "Pharmaceutical Product Registration Timeline",
       subtitle = "Yearly distribution of registered vs non-registered products",
       x = "Year",
       y = "Number of Products",
       fill = "Registration Status",
       caption = "") +
  scale_fill_manual(values = c("NR" = "#E74C3C", "R" = "#27AE60"),
                    labels = c("NR" = "Non-Registered", "R" = "Registered")) +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
        plot.subtitle = element_text(hjust = 0.5, size = 12),
        axis.text.x = element_text(angle = 0, hjust = 0.5))

print(p4)



```



# Publishing

```{r}

df%>%write.csv(csv_OUT_FILE,row.names = FALSE)

```


